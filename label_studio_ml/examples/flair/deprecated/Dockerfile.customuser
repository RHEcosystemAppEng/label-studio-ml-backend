# syntax=docker/dockerfile:1
ARG PYTHON_VERSION=3.11

FROM python:${PYTHON_VERSION}-slim AS python-base
ARG TEST_ENV

ENV PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    PORT=${PORT:-9090} \
    PIP_CACHE_DIR=/.cache \
    WORKERS=1 \
    THREADS=8

# Update the base OS and install Tesseract
RUN --mount=type=cache,target="/var/cache/apt",sharing=locked \
    --mount=type=cache,target="/var/lib/apt/lists",sharing=locked \
    set -eux; \
    apt-get update; \
    apt-get upgrade -y; \
    apt install --no-install-recommends -y  \
        git gcc python3-dev; \
    apt-get autoremove -y

RUN mkdir -p /data 
RUN chmod -R +777 /data

RUN mkdir -p /root/.flair
RUN chmod -R +777 /root

RUN mkdir -p /.cache
RUN chmod -R +777 /.cache

# Create a custom user with UID 1234 and GID 1234
RUN groupadd -g 1001 flair && \
    useradd -m -u 1001 -g flair flair

USER flair
WORKDIR /home/flair

RUN python3 -m venv env
RUN . ./env/bin/activate 

# install base requirements
COPY --chown=1001:1001 requirements-base.txt .
RUN --mount=type=cache,target=${PIP_CACHE_DIR},sharing=locked \
    pip install --user -r requirements-base.txt

# install custom requirements
COPY --chown=1001:1001 requirements.txt .
RUN --mount=type=cache,target=${PIP_CACHE_DIR},sharing=locked \
    pip install --user -r requirements.txt

COPY --chown=1001:1001 . .

RUN chown -R 1001 /home/flair \
    && chmod -R "g+rwX" /home/flair \
    && chown -R 1001:1001 /home/flair

EXPOSE 9090

ENV PATH="/home/flair/env/bin:$PATH"
ENV PATH="/home/flair/.local/bin:$PATH"
ENV PATH="/home/flair/.local/lib/python3.11/site-packages:$PATH"

ENV PYTHONPATH=${PATH}

CMD gunicorn --preload --bind :$PORT --workers $WORKERS --threads $THREADS --timeout 0 _wsgi:app
